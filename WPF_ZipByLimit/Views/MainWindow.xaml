<Window x:Class="WPF_ZipByLimit.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:local="clr-namespace:WPF_ZipByLimit.Views"
        xmlns:cvt="clr-namespace:WPF_ZipByLimit.Converters"
        xmlns:constants="clr-namespace:WPF_ZipByLimit.Constants"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="Zip A Folder By Rules" Height="600" Width="880">
    <Window.Resources>
        <ObjectDataProvider x:Key="SizeUnitEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="constants:SizeUnit"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <BooleanToVisibilityConverter x:Key="Bool2VisiConverter"/>
        <cvt:EnumToRadioButtonConverter x:Key="EnumConverter"/>
        <cvt:NumberToDataGridRowBgColorConverter x:Key="Number2Color"/>
        <cvt:BoolToDataGridRowBgColorConverter x:Key="BoolToColor"/>
        <!--设置单元格文字右对齐-->
        <Style TargetType="{x:Type TextBlock}" x:Key="RightAlignCell">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <!--设置DataGrid单元格文字垂直居中-->
        <!--
        <Style TargetType="{x:Type DataGridCell}" x:Key="Body_Content_DataGrid_Centering">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Window.Resources>

    <Grid Margin="8">
        <!--<ContentControl prism:RegionManager.RegionName="ContentRegion" />-->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <StackPanel>
            <Grid Margin="0,0,0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Label Content="Please input folder path:" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                <TextBox Grid.Row="1" Text="{Binding UserInputFolderPath,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" VerticalAlignment="Stretch" VerticalContentAlignment="Center" Height="26" FontSize="14" HorizontalAlignment="Stretch"/>
                <Button Content="Add Folder" Grid.Column="1" Grid.Row="1" Margin="8,0" Command="{Binding AddSourceFolderCommand}"/>
                <Button Content="Select Folder" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" Command="{Binding SelectSourceFolderCommand}" Margin="0,0,0,0"/>
            </Grid>
            <!--<TextBlock Text="* Iterate all sub-folders if exist." Foreground="Gray" HorizontalAlignment="Right"/>-->
            <GroupBox Header="Zip Target" Margin="0,4,0,4">
                <StackPanel Orientation="Horizontal">
                    <RadioButton Content="Zip Files As Minimal Unit" Margin="0,0,8,0" IsChecked="{Binding Path=ZipUnit, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static constants:FoldersOrFiles.ZipFiles}}"/>
                    <RadioButton Content="Zip Folders As Minimal Unit" IsChecked="{Binding Path=ZipUnit, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static constants:FoldersOrFiles.ZipFolders}}"/>
                </StackPanel>
            </GroupBox>
            <!--<Button Content="Load Folders" Margin="0,8,0,8" Command="{Binding LoadFoldersCommand}"/>-->
        </StackPanel>

        <!--【表格】高度随窗口大小变化-->
        <DataGrid AutoGenerateColumns="False" Grid.Row="1" ItemsSource="{Binding FolderModelCollection}" CanUserAddRows="False" 
                  SelectedItem="{Binding DataGridSelectedFolder}" 
                  x:Name="DG_ZipFilesInFolders" LoadingRow="DG_ZipFilesInFolders_LoadingRow" Margin="0,8,0,4"
                  RowDetailsVisibilityMode="Collapsed">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding Path=OverSizedFileCount, Converter={StaticResource Number2Color},Mode=OneWay}"/>
                    <Setter Property="Background" Value="{Binding Path=IsOverSized, Converter={StaticResource BoolToColor},Mode=OneWay}"/>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Expander x:Name="DetialExpander" Expanded="DetialExpander_Expanded" Collapsed="DetialExpander_Collapsed"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>

            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="36" FontFamily="Segoe MDL2 Assets" Content="&#xE107;" Command="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.DeleteSelectedFolderCommand}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Folder Name" Width="auto" Binding="{Binding FolderName}" IsReadOnly="True" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTextColumn Header="Sub-Folder" Width="auto" Binding="{Binding SubFolderCount}" IsReadOnly="True" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTextColumn Header="Folder Size" Width="auto" IsReadOnly="True" Binding="{Binding FolderSize}" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTextColumn Header="Folder Size Total" Width="auto" IsReadOnly="True" Binding="{Binding FolderSizeTotalToDisplay}" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTextColumn Header="Folder Files" Width="auto" IsReadOnly="True" Binding="{Binding FileCount}" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTextColumn Header="Folder Files Total" Width="auto" IsReadOnly="True" Binding="{Binding FileCountTotal}" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTextColumn Header="Oversized Files" Width="auto" IsReadOnly="True" Binding="{Binding OverSizedFileCount}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource RightAlignCell}">
                            <Setter Property="Background" Value="{Binding Path=OverSizedFileCount, Converter={StaticResource Number2Color}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <!--<DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Grid>
                                        <TextBlock Text="ss" Margin="80"/>
                                    </Grid>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>-->
                </DataGridTextColumn>
                <DataGridTextColumn Header="Output Zip Files" Width="auto" IsReadOnly="True" Binding="{Binding OutputZipFilesString}" ElementStyle="{StaticResource RightAlignCell}"/>
                <DataGridTemplateColumn Header="Progress" Width="*" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ProgressBar HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Value="{Binding Progress}" />
                                <TextBlock Text="{Binding CurrentZipFile,Mode=OneWay}" HorizontalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <!--DataGrid Detail面板，用户单击一行，可以显示该行的额外信息。-->
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border BorderThickness="1" Background="White" BorderBrush="Gray" Padding="8" MaxHeight="240">
                        <ScrollViewer>
                            <StackPanel>
                                <TextBlock Text="Attentions" Background="{Binding Path=OverSizedFileCount, Converter={StaticResource Number2Color}}" 
                                       FontWeight="Bold" Foreground="White"
                                       Visibility="{Binding IsDetailAttentionMessageVisiable,Mode=OneWay,Converter={StaticResource Bool2VisiConverter}}"/>
                                <TextBlock Text="{Binding DetailAttentionMessage,Mode=OneWay}"
                                       Visibility="{Binding IsDetailAttentionMessageVisiable,Mode=OneWay,Converter={StaticResource Bool2VisiConverter}}"/>
                                <TextBlock Text="Output Zip Files" Background="ForestGreen"  FontWeight="Bold" Foreground="White"/>
                                <TextBlock Text="{Binding DetailOutputZipMessage, Mode=OneWay}"/>
                            </StackPanel>
                        </ScrollViewer>
                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>


        <StackPanel Grid.Row="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="Select Zip Rules" Margin="0,4,0,4">
                    <StackPanel>
                        <RadioButton IsChecked="{Binding Path=SelectedZipRule, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static constants:ZipRule.BySize}}" Content="By Size"/>
                        <RadioButton IsChecked="{Binding Path=SelectedZipRule, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static constants:ZipRule.ByAmount}}" Content="By Amount"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Set Zip Rules" Margin="0,4,0,4" Grid.Column="1" Visibility="{Binding BySizeSettingVisibility}">
                    <Grid x:Name="SizeLimitationRule">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Max zip size:"/>
                        <TextBox x:Name="MaxSizeTextBox" Grid.Column="1" VerticalContentAlignment="Center" Margin="8,0,0,0" 
                                 Text="{Binding MaxZipSize,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Delay=1000}"
                                 PreviewTextInput="TextBox_AllowIntegerOnly">
                            <!--<TextBox.InputBindings>
                                <KeyBinding Command="{Binding MaxSizeTextBoxEnterCommand}" CommandParameter="{Binding Path=Text,ElementName=MaxSizeTextBox}" Key="Return"/>
                            </TextBox.InputBindings>-->
                            <!--<TextBox.Text>
                                <Binding Path="MaxZipSize" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Delay="1000">
                                    <Binding.ValidationRules>
                                        <validation:StringToIntValidationRule ValidationStep="RawProposedValue"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>-->
                        </TextBox>
                        <ComboBox Grid.Column="2" ItemsSource="{Binding Source={StaticResource SizeUnitEnum}}" SelectedItem="{Binding SelectedSizeUnit}" Width="64" Margin="8,0,0,0"/>
                        <Label Content="Delete files after zip:" Grid.Row="1"/>
                        <CheckBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0" IsChecked="{Binding DeleteFilesAfterZip, Mode=TwoWay}"/>
                        <Label Content="Delete folder after zip:" Grid.Row="2"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0" IsChecked="{Binding DeleteFolderAfterZip, Mode=TwoWay}"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Set Zip Rules" Margin="0,4,0,4" Grid.Column="1" Visibility="{Binding ByAmountSettingVisibility}">
                    <Grid x:Name="CountLimitationRule">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Max file amount:"/>
                        <TextBox Grid.Column="1" x:Name="MaxZipFileNumber_TextBox"
                                 VerticalContentAlignment="Center" Margin="8,0,0,0" 
                                 Text="{Binding MaxZipFilesContains,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Delay=1000}"
                                 PreviewTextInput="TextBox_AllowIntegerOnly"/>
                        <Label Content="Delete files after zip:" Grid.Row="1"/>
                        <CheckBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0" IsChecked="{Binding DeleteFilesAfterZip, Mode=TwoWay}"/>
                        <Label Content="Delete folder after zip:" Grid.Row="2"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0" IsChecked="{Binding DeleteFolderAfterZip, Mode=TwoWay}"/>
                    </Grid>
                </GroupBox>
            </Grid>
            <StackPanel Orientation="Horizontal">
                <Label>Select ZIP output path:</Label>
                <TextBlock VerticalAlignment="Center" FontSize="14">
                    <Hyperlink>
                        <TextBlock Text="{Binding TargetFolderPath,Mode=OneWay}">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding SelectTargetFolderCommand}" MouseAction="LeftClick"/>
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </Hyperlink>
                </TextBlock>
            </StackPanel>
            <!--这里把错误消息绑定到了StackPanel上，之所以不用ListBox和ListView，是因为他们两个属性太多，包括选择，高亮什么的属性，不好去除。-->
            <ItemsControl ItemsSource="{Binding ErrorMessageCollection}"
                          Visibility="{Binding IsErrorMessagesVisiable,Mode=OneWay,Converter={StaticResource Bool2VisiConverter}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <!--绑定List<string>中的string-->
                        <TextBlock Text="{Binding ., Mode=OneWay}" FontWeight="Bold" Foreground="Red" HorizontalAlignment="Right"
                                   Margin="4,0"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button Content="Start Zip" Margin="0,4,0,0" Command="{Binding StartZipCommand}"/>
        </StackPanel>
        <TextBlock Grid.Row="3" Text="Developed By Jinge Zhang" HorizontalAlignment="Right" Margin="0,0,0,-6" Foreground="Gray"/>
    </Grid>
</Window>
